1)

public class OutputFileTest		
	{
    	private File output; 
    	@Before public void createOutputFile() 
 	 { 
       output = new File(...);
    	}
  
	@After public void deleteOutputFile() 
   		{
        output.delete(); 
   	} 
     
    @Test public void testFile1() 
    		{
       
   		} 
	@Test public void testFile2() 
   	 {
       
    		}
}

----------------------------------------------------------------------------------------

2)

package annotations;


import java.lang.annotation.*;

public class Annotation {
public static void main(String[] args) {
		// TODO Auto-generated method stub
		Information i=new Information("extra info");
		Class c = i.getClass();
		java.lang.annotation.Annotation an=c.getAnnotation(info.class);
		info in=(info)an;
		System.out.println(in.Date());
		System.out.println(in.AuthorID());
		System.out.println(in.Time());
		System.out.println(in.version());
		
	}

}



@info(name="sahana",version=6,AuthorID=123,Author="kuvempu",Date="1.12.1998",Time="12:30")
class Information{
	String extrainfo;

	public Information(String extrainfo) {
		super();
		this.extrainfo = extrainfo;
	}
	
	
}


package annotations;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import java.lang.annotation.RetentionPolicy;

@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
public @interface info {

	String name();
	String supervisor()default "keerthi";
	int version();
	int AuthorID();
	String Author() default "sahana";
	String Date();
	String Time();
	String desp() default "hello its annotation program";
	
}
--------------------------------------------------------------------------------------------------

3)

package Annotations;
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;
import java.lang.annotation.*;

@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
@interface Execute{
    int sequence() default 0;
}
public class anno3 {
    public static void main(String[] args) {
        testing s= new testing(56);
        
        Class t=s.getClass();
        
        Annotation a = t.getAnnotation(Execute.class);
        Execute x=(Execute)a;
        System.out.println(x.sequence());
    }
}
class testing{
    private int pin;
    public testing(int pin){
        this.pin=pin;
    }
    @Execute(sequence=1)
    public static void run(){
    	System.out.println("Hello");
    }
    @Execute(sequence=2)
    public static void run2(){
    	System.out.println("hi");
    }
}